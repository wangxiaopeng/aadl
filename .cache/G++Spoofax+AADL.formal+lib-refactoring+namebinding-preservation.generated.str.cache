Module("lib-refactoring/namebinding-preservation.generated",[Imports([Import("libstratego-lib")]),Strategies([RDef("binding-violation-errors",[DefaultVarDec("analyze"),DefaultVarDec("is-endangered-name")],Rule(Var("ast-expected-bindings"),App(Call(SVar("binding-violation-errors"),[CallNoArgs(SVar("is-endangered-name"))]),NoAnnoList(Tuple([Var("ast-expected-bindings"),Var("ast-actual-bindings")]))),Assign(Var("ast-actual-bindings"),App(CallNoArgs(SVar("analyze")),Var("ast-expected-bindings"))))),RDefNoArgs("binding-violation-errors",RuleNoCond(NoAnnoList(Tuple([Var("ast-expected-bindings"),Var("ast-actual-bindings")])),RootApp(Call(SVar("binding-violation-errors"),[Id])))),RDef("binding-violation-errors",[DefaultVarDec("is-endangered-name")],Rule(As(Var("change-tuple"),NoAnnoList(Tuple([Var("ast-expected-bindings"),Var("ast-actual-bindings")]))),Var("all-binding-violations"),Assign(Var("all-binding-violations"),App(Seq(Call(SVar("binding-violations"),[CallNoArgs(SVar("is-endangered-name"))]),Call(SVar("map"),[CallNoArgs(SVar("to-namebinding-error"))])),Var("change-tuple"))))),RDefNoArgs("to-namebinding-error",Rule(AnnoList(Var("t"),[Var("nb1"),Var("nb2")]),NoAnnoList(Tuple([RootApp(CallNoArgs(SVar("strip-annos"))),NoAnnoList(StringQuotation1("                                     ",[QStr("Name collision with name '"),StringEscape1("                                                               ",RootApp(CallNoArgs(SVar("strip-annos")))),QStr("'")]))])),Seq(BA(Not(Match(NoAnnoList(Op("None",[])))),Var("nb1")),BA(Not(Match(NoAnnoList(Op("None",[])))),Var("nb2"))))),RDefNoArgs("to-namebinding-error",RuleNoCond(AnnoList(Var("t"),[Wld,NoAnnoList(Op("None",[]))]),NoAnnoList(Tuple([RootApp(CallNoArgs(SVar("strip-annos"))),NoAnnoList(StringQuotation1("                                      ",[QStr("Variable becomes unbound '"),StringEscape1("                                                                ",RootApp(CallNoArgs(SVar("strip-annos")))),QStr("'")]))])))),RDefNoArgs("to-namebinding-error",RuleNoCond(AnnoList(Var("t"),[NoAnnoList(Op("None",[])),Wld]),NoAnnoList(Tuple([RootApp(CallNoArgs(SVar("strip-annos"))),NoAnnoList(StringQuotation1("                                      ",[QStr("Unbound variabele becomes bound '"),StringEscape1("                                                                       ",RootApp(CallNoArgs(SVar("strip-annos")))),QStr("'")]))])))),RDef("binding-violations",[DefaultVarDec("is-endangered-name")],Rule(As(Var("trees"),NoAnnoList(Tuple([Var("ast-expected-bindings"),Var("ast-actual-bindings")]))),Var("all-binding-violations"),Assign(Var("all-binding-violations"),App(Seq(CallNoArgs(SVar("binding-compare-ast")),Call(SVar("binding-violations-on-compare-tree"),[CallNoArgs(SVar("is-endangered-name"))])),Var("trees"))))),RDefNoArgs("binding-compare-ast",Rule(NoAnnoList(Tuple([Var("ast-expected-bindings"),Var("ast-actual-bindings")])),Var("binding-compare-ast"),Assign(Var("binding-compare-ast"),App(CallNoArgs(SVar("merge-bindings")),NoAnnoList(Tuple([Var("ast-expected-bindings"),Var("ast-actual-bindings")])))))),SDefNoArgs("merge-bindings",LChoice(CallNoArgs(SVar("merge-bindings-1")),LChoice(CallNoArgs(SVar("merge-bindings-2")),LChoice(CallNoArgs(SVar("merge-bindings-3")),CallNoArgs(SVar("merge-bindings-4")))))),RDefNoArgs("merge-bindings-1",Rule(NoAnnoList(Tuple([AnnoList(Var("s1"),[Var("nb1")]),AnnoList(Var("s2"),[Var("nb2")])])),AnnoList(Var("s1"),[Var("nb1"),Var("nb2")]),Seq(BA(CallNoArgs(SVar("is-string")),Var("s1")),BA(CallNoArgs(SVar("equal")),NoAnnoList(Tuple([AnnoList(Var("s1"),[]),AnnoList(Var("s2"),[])])))))),RDefNoArgs("merge-bindings-2",Rule(NoAnnoList(Tuple([AnnoList(Var("s1"),[Var("nb1")]),Var("s2")])),AnnoList(Var("s1"),[Var("nb1"),NoAnnoList(Op("None",[]))]),Seq(BA(CallNoArgs(SVar("is-string")),Var("s1")),BA(CallNoArgs(SVar("equal")),NoAnnoList(Tuple([AnnoList(Var("s1"),[]),AnnoList(Var("s2"),[])])))))),RDefNoArgs("merge-bindings-3",Rule(NoAnnoList(Tuple([Var("s1"),AnnoList(Var("s2"),[Var("nb2")])])),AnnoList(Var("s1"),[NoAnnoList(Op("None",[])),Var("nb2")]),Seq(BA(CallNoArgs(SVar("is-string")),Var("s1")),BA(CallNoArgs(SVar("equal")),NoAnnoList(Tuple([AnnoList(Var("s1"),[]),AnnoList(Var("s2"),[])])))))),RDefNoArgs("merge-bindings-4",Rule(NoAnnoList(Tuple([NoAnnoList(Explode(Var("c"),Var("args1"))),NoAnnoList(Explode(Var("c"),Var("args2")))])),NoAnnoList(Explode(Var("c"),Var("args"))),Assign(Var("args"),App(Seq(CallNoArgs(SVar("zip")),Call(SVar("map"),[CallNoArgs(SVar("merge-bindings"))])),NoAnnoList(Tuple([Var("args1"),Var("args2")])))))),RDef("binding-mapping",[DefaultVarDec("is-endangered-name")],Rule(Var("binding-compare-ast"),Var("bindings-mapping"),Assign(Var("bindings-mapping"),App(Seq(Call(SVar("collect-binding-pairs"),[CallNoArgs(SVar("is-endangered-name"))]),CallNoArgs(SVar("make-set"))),Var("binding-compare-ast"))))),RDef("collect-binding-pairs",[DefaultVarDec("is-endangered-name")],Rule(Var("binding-compare-ast"),Var("bindings-mapping"),Assign(Var("bindings-mapping"),App(Call(SVar("collect-all"),[Seq(CallNoArgs(SVar("is-string")),Seq(Match(AnnoList(Wld,[Wld,Wld])),Where(Seq(CallNoArgs(SVar("strip-annos")),CallNoArgs(SVar("is-endangered-name")))))),CallNoArgs(SVar("conc"))]),Var("binding-compare-ast"))))),RDef("binding-violations-on-compare-tree",[DefaultVarDec("is-endangered-name")],Rule(Var("binding-compare-ast"),Var("all-binding-violations"),Seq(Assign(Var("all-bindings"),App(Call(SVar("collect-binding-pairs"),[CallNoArgs(SVar("is-endangered-name"))]),Var("binding-compare-ast"))),Seq(Assign(Var("binding-mapping"),App(CallNoArgs(SVar("make-set")),Var("all-bindings"))),Seq(Assign(Var("binding-violations"),App(CallNoArgs(SVar("filter-violations")),Var("binding-mapping"))),Assign(Var("all-binding-violations"),App(CallNoArgs(SVar("isect")),NoAnnoList(Tuple([Var("all-bindings"),Var("binding-violations")]))))))))),RDefNoArgs("filter-violations",Rule(Var("binding-mapping"),App(CallNoArgs(SVar("concat")),NoAnnoList(List([Var("broken-bindings"),Var("created-bindings"),Var("changed-bindings")]))),Seq(Assign(Var("broken-bindings"),App(CallNoArgs(SVar("filter-broken-bindings")),Var("binding-mapping"))),Seq(Assign(Var("created-bindings"),App(CallNoArgs(SVar("filter-created-bindings")),Var("binding-mapping"))),Assign(Var("changed-bindings"),App(CallT(SVar("filter-changed-bindings"),[],[Var("binding-mapping")]),Var("binding-mapping"))))))),RDefT("filter-changed-bindings",[],[DefaultVarDec("binding-mapping")],Rule(NoAnnoList(ListTail([AnnoList(Var("t"),[Var("nb1"),Var("nb2")])],Var("bindings"))),Var("result"),Seq(Assign(Var("binding-mapping'"),App(Call(SVar("filter"),[Not(Match(AnnoList(Wld,[Var("nb1"),Var("nb2")])))]),Var("binding-mapping"))),Seq(Assign(Var("conflicts"),App(Seq(Call(SVar("filter"),[LChoice(Match(AnnoList(Wld,[Var("nb1"),Wld])),Match(AnnoList(Wld,[Wld,Var("nb2")])))]),Call(SVar("filter"),[Not(LChoice(Match(AnnoList(Wld,[Var("nb1"),NoAnnoList(Op("None",[]))])),Match(AnnoList(Wld,[NoAnnoList(Op("None",[])),Var("nb2")]))))])),Var("binding-mapping"))),SwitchChoice(BA(Call(SVar("filter"),[Not(Match(AnnoList(Wld,[Var("nb1"),Var("nb2")])))]),Var("conflicts")),[SwitchCase(Match(NoAnnoList(List([]))),Assign(Var("result"),App(CallT(SVar("filter-changed-bindings"),[],[Var("binding-mapping'")]),Var("bindings")))),SwitchCase(Seq(Where(Call(SVar("fetch"),[Match(AnnoList(Wld,[Var("nb1"),Wld]))])),Where(Call(SVar("fetch"),[Match(AnnoList(Wld,[Wld,Var("nb2")]))]))),Assign(Var("result"),NoAnnoList(ListTail([AnnoList(Var("t"),[Var("nb1"),Var("nb2")])],App(CallT(SVar("filter-changed-bindings"),[],[Var("binding-mapping'")]),Var("bindings")))))),SwitchCase(BA(CallNoArgs(SVar("equal")),NoAnnoList(Tuple([AnnoList(Var("t"),[Var("nb1"),Var("nb2")]),App(CallNoArgs(SVar("last")),Var("conflicts"))]))),Assign(Var("result"),NoAnnoList(ListTail([AnnoList(Var("t"),[Var("nb1"),Var("nb2")])],App(CallT(SVar("filter-changed-bindings"),[],[Var("binding-mapping'")]),Var("bindings"))))))],Assign(Var("result"),App(CallT(SVar("filter-changed-bindings"),[],[Var("binding-mapping")]),Var("bindings")))))))),RDefT("filter-changed-bindings",[],[DefaultVarDec("binding-mapping")],RuleNoCond(NoAnnoList(List([])),NoAnnoList(List([])))),SDefNoArgs("filter-broken-bindings",Call(SVar("filter"),[Match(AnnoList(Wld,[Wld,NoAnnoList(Op("None",[]))]))])),SDefNoArgs("filter-created-bindings",Call(SVar("filter"),[Match(AnnoList(Wld,[NoAnnoList(Op("None",[])),Wld]))]))])])